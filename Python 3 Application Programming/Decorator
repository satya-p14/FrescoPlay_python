# problem 1

#!/bin/python3

import sys
import os
import datetime as dt

#Add log function and inner function implementation here
def log(func):
    def inner(x):
        return 'Accessed the function -\''+'greet'+'\' with arguments (\''+x+'\',) {}'
        func(x)
    return inner

def greet(msg):
    return 'Greeting Message : ' + msg

greet = log(greet)
    

'''Check the Tail section for input/output'''
if __name__ == "__main__":
    with open(os.environ['OUTPUT_PATH'], 'w') as fout:
        res_lst = list()
        res_lst.append(greet(str(input())))
        fout.write("{}".format(*res_lst))


# problem 2

#!/bin/python3

import sys
import os



def log(func):
    def inner(*args, **kwdargs):
        str_template = "Accessed the function -'{}' with arguments {} {}".format(func.__name__, args, kwdargs)
        return str_template + "\n" + str(func(*args, **kwdargs))
    return inner
    
@log
def average(n1, n2, n3):
    return (n1 + n2 + n3)/3


'''Check the Tail section for input/output'''

if __name__ == "__main__":
    with open(os.environ['OUTPUT_PATH'], 'w') as fout:
        res_lst = list()
        (a,b,c) = (map(lambda x: float(x.strip()), input().split(',')))
        res_lst.append(average(a,b,c))
        fout.write("{}".format(*res_lst))


#problem 3 : 

import sys
import os


#Define and implement bold_tag

def bold_tag(func):
    def inner(x):
        return '<b>'+str(func(x))+'</b>'
    return inner

def say(msg):
    return msg

say = bold_tag(say)
    
'''Check the Tail section for input/output'''

if __name__ == "__main__":
    with open(os.environ['OUTPUT_PATH'], 'w') as fout:
        res_lst = list()
        res_lst.append(say(input()))
        fout.write("{}".format(*res_lst))


# problem 4 : 

import os
import sys


#Implement italic_tag below

def italic_tag(func):
    def inner(*args, **kwdargs):
        return '<i>'+str(func(*args, **kwdargs))+'</i>'
    return inner

def say(msg):
    return msg

say = italic_tag(say)
    
'''Check the Tail section for input/output'''

if __name__ == "__main__":
    with open(os.environ['OUTPUT_PATH'], 'w') as fout:
        res_lst = list()
        res_lst.append(say(input()))
        fout.write("{}".format(*res_lst))

# problem 5: 

import os
import sys

def bold_tag(func):    
    def inner(*args, **kwdargs):
        return '<b>'+func(*args, **kwdargs)+'</b>'
    return inner

def italic_tag(func):
    def inner(*args, **kwdargs):
        return '<i>'+func(*args, **kwdargs)+'</i>'
    return inner
    
#Add greet() function definition

def greet():
    return '<i>'+input()+'</i>'
    
'''Check the Tail section for input/output'''

if __name__ == "__main__":
    with open(os.environ['OUTPUT_PATH'], 'w') as fout:
        res_lst = list()
        res_lst.append(greet())
        fout.write("{}".format(*res_lst))


#problem 6 : 

import os
import sys


def bold_tag(func):
    
    def inner(*args, **kwdargs):
        return '<b>'+func(*args, **kwdargs)+'</b>'
        
    return inner

def italic_tag(func):
    
    def inner(*args, **kwdargs):
        return '<i>'+func(*args, **kwdargs)+'</i>'
        
    return inner
    
#Add greet() implementation here

@italic_tag
@bold_tag
def greet():
    return input()
    
'''check Tail section below for input / output'''

if __name__ == "__main__":
    with open(os.environ['OUTPUT_PATH'], 'w') as fout:
        res_lst = list()
        res_lst.append(greet())
        fout.write("{}".format(*res_lst))



